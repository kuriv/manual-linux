{"./":{"url":"./","title":"Linux","keywords":"","body":"Linux Linux 是一种自由和开放源码的类 Unix 操作系统。 "},"docs/安装 Linux.html":{"url":"docs/安装 Linux.html","title":"安装 Linux","keywords":"","body":"安装 Linux 由于不同 Linux 发行版的具体功能以及内核存在差异，本手册仅演示 Ubuntu 24.04 LTS 。 要了解更多选择，可以前往 Ubuntu 官网 。 "},"docs/目录结构.html":{"url":"docs/目录结构.html","title":"目录结构","keywords":"","body":"目录结构 在 Linux 系统中所有文件和目录都从根目录下开始。 bin ├───── 该目录是 binary 的缩写，主要用于存放常用命令文件 boot ├───── 该目录主要用于存放系统启动时需要用到的核心文件 dev ├───── 该目录是 device 的缩写，主要用于存放设备文件 etc ├───── 该目录主要用于存放系统用户所需要的配置文件 home ├───── 该目录为用户目录 lib ├───── 该目录是 library 的缩写，主要用于存放动态库文件以供应用程序调用 lost+found ├───── 当系统非法关机后，相关文件会存放在此目录 media ├───── 该目录主要用于挂载系统自动识别的设备 mnt ├───── 该目录主要用于挂载临时识别的文件系统 opt ├───── 该目录主要用于存放第三方应用程序 proc ├───── 该目录是系统内存的映射，可以通过直接访问该目录来获取系统信息 root ├───── 该目录为超级用户主目录 run ├───── 该目录主要用于存放系统运行时需要用到的文件 sbin ├───── 该目录主要用于存放系统管理员所用到的管理程序 srv ├───── 该目录主要用于存放系统服务启动之后所要用到的数据 usr ├───── 该目录主要用于存放用户的应用程序及文件 tmp ├───── 该目录主要用于存放临时文件 var ├───── 该目录主要用于存放经常被修改的文件 "},"docs/文件权限.html":{"url":"docs/文件权限.html","title":"文件权限","keywords":"","body":"文件权限 Linux 目录权限是控制用户访问文件与目录的核心安全机制，通过权限分配限制不同用户对资源的操作范围，确保系统在多用户环境下的数据安全性。 文件权限分为读（r）、写（w）、执行（x）三类，分别对应文件所有者、所属组用户和其他用户。 "},"docs/帮助命令.html":{"url":"docs/帮助命令.html","title":"帮助命令","keywords":"","body":"帮助命令 man info whatis "},"docs/帮助命令/man.html":{"url":"docs/帮助命令/man.html","title":"man","keywords":"","body":"man 执行下面的命令，查看 cp 命令的帮助手册。 man cp 执行下面的命令，查看 sleep 命令的简要信息。 man -f sleep 执行下面的命令，查看 ls 命令帮助手册文件所在位置。 man -w ls 执行下面的命令，搜索与 disk 命令相关的帮助手册。 man -k disk "},"docs/帮助命令/info.html":{"url":"docs/帮助命令/info.html","title":"info","keywords":"","body":"info 执行下面的命令，查看 ls 命令的文档。 info ls 执行下面的命令，显示 ls 命令的文档所在位置。 info -w ls "},"docs/帮助命令/whatis.html":{"url":"docs/帮助命令/whatis.html","title":"whatis","keywords":"","body":"whatis 执行下面的命令，查看 sleep 命令的简要信息。 whatis sleep "},"docs/文件命令.html":{"url":"docs/文件命令.html","title":"文件命令","keywords":"","body":"文件命令 "},"docs/文件命令/stat.html":{"url":"docs/文件命令/stat.html","title":"stat","keywords":"","body":"stat 执行下面的命令，查看指定文件的信息。 stat file.txt 执行下面的命令，查看指定文件所在文件系统的信息。 stat -f file.txt 执行下面的命令，以简洁方式输出指定文件的信息。 stat -t file.txt "},"docs/文件命令/file.html":{"url":"docs/文件命令/file.html","title":"file","keywords":"","body":"file 执行下面的命令，查看文件的类型。 file file.txt 执行下面的命令，显示目录的类型。 file dir 执行下面的命令，显示文件的 MIME 类别。 file -i file.txt 执行下面的命令，显示符号链接文件所对应的目标文件类型。 file -L /dev/cdrom "},"docs/文件命令/touch.html":{"url":"docs/文件命令/touch.html","title":"touch","keywords":"","body":"touch 执行下面的命令，创建新的空白文件。 touch file.txt 执行下面的命令，依次创建多个新的空白文件。 touch file1.txt file2.txt file3.txt 执行下面的命令，更新已有文件的访问时间戳。 touch -a file.txt 执行下面的命令，更新已有文件的修改时间戳。 touch -m file.txt 执行下面的命令，更新已有文件的时间戳而不创建新的空白文件。 touch -c nofile.txt 执行下面的命令，将访问时间戳和修改时间戳从一个文件复制到另一个文件。 touch file1.txt -r file2.txt 执行下面的命令，更新已有文件的访问时间戳和修改时间戳为明天。 touch -d \"tomorrow\" file.txt 执行下面的命令，更新已有文件的访问时间戳和修改时间戳为任意时间。 touch -t 2001010000.00 file.txt "},"docs/文件命令/cp.html":{"url":"docs/文件命令/cp.html","title":"cp","keywords":"","body":"cp 执行下面的命令，复制文件。 cp file.txt newfile.txt 执行下面的命令，若目标文件已存在，则询问是否覆盖。 cp -i file.txt newfile.txt 执行下面的命令，若目标文件已存在，则直接覆盖。 cp -r file.txt newfile.txt 执行下面的命令，若目标文件已存在，则在覆盖之前备份。 cp -b file.txt newfile.txt 执行下面的命令，复制目录。 cp -r dir newdir 执行下面的命令，复制目录，并且保留源目录所有文件属性一致。 cp -a dir1 dir2 "},"docs/文件命令/mv.html":{"url":"docs/文件命令/mv.html","title":"mv","keywords":"","body":"mv 执行下面的命令，将文件移动到新目录中。 mv file.txt dir 执行下面的命令，将文件重命名。 mv file.txt newfile.txt 执行下面的命令，将文件重命名，若新文件已存在，则询问是否覆盖。 mv -i file.txt newfile.txt 执行下面的命令，将文件重命名，若新文件已存在，则直接覆盖。 mv -f file.txt newfile.txt 执行下面的命令，在文件被覆盖之前备份。 mv -b file.txt newfile.txt 执行下面的命令，仅当源文件比目标文件新时，才执行更新操作。 mv -u file.txt newfile.txt 执行下面的命令，将一个目录移动到另一个目录中。 mv dir1 dir2 执行下面的命令，将当前目录下所有文件移动到上级目录。 mv * .. 执行下面的命令，将当前目录下的其中一个子目录中所有文件移动到另一个子目录中。 mv dir1/* dir3 "},"docs/文件命令/rename.html":{"url":"docs/文件命令/rename.html","title":"rename","keywords":"","body":"rename 执行下面的命令，以字符串替换方式修改文件扩展名。 rename 's/.txt/.doc/' file.txt 执行下面的命令，以字符串替换方式模拟批量修改文件名。 rename -n 's/file/file0/' file* 执行下面的命令，以字符串替换方式批量修改文件名，并显示执行过程信息。 rename -v 's/file/file0/' file* "},"docs/文件命令/rm.html":{"url":"docs/文件命令/rm.html","title":"rm","keywords":"","body":"rm 执行下面的命令，删除指定的文件。 rm file.txt 执行下面的命令，递归删除指定的目录及其内容。 rm -r dir 执行下面的命令，强制删除指定的文件，不带提示。 rm -f nofile.txt 执行下面的命令，删除当前目录下所有文件。 rm -rf * 执行下面的命令，删除前逐一询问确认。 rm -i file1.txt file2.txt file3.txt "},"docs/文件命令/basename.html":{"url":"docs/文件命令/basename.html","title":"basename","keywords":"","body":"basename 执行下面的命令，提取指定文件名。 basename /etc/passwd 执行下面的命令，提取指定目录名。 basename /usr/local/ 执行下面的命令，提取多个文件名或目录名。 basename -a /etc/passwd /usr/local/ 执行下面的命令，提取指定文件名，并删除指定后缀。 basename /etc/sysctl.conf .conf "},"docs/文件命令/lsattr.html":{"url":"docs/文件命令/lsattr.html","title":"lsattr","keywords":"","body":"lsattr 执行下面的命令，查看指定文件属性。 lsattr file.txt "},"docs/文件命令/chattr.html":{"url":"docs/文件命令/chattr.html","title":"chattr","keywords":"","body":"chattr 执行下面的命令，为指定的文件添加限制，防止其被修改。 sudo chattr +i file.txt 执行下面的命令，为指定的文件删除限制。 sudo chattr -i file.txt 执行下面的命令，为指定的文件添加限制，只允许追加内容。 sudo chattr +a file.txt 执行下面的命令，为指定目录中所有文件添加限制，防止其被修改。 sudo chattr -R +i dir "},"docs/文件命令/md5sum.html":{"url":"docs/文件命令/md5sum.html","title":"md5sum","keywords":"","body":"md5sum 执行下面的命令，计算指定文件的 md5 值。 md5sum file.txt 执行下面的命令，使用不同模式计算指定文件的 md5 值。 md5sum -b file.txt md5sum -t file.txt 执行下面的命令，计算指定文件的 md5 值，并重定向到另一个文件中。 md5sum file.txt > file.md5 执行下面的命令，执行 md5 校验。 md5sum -c file.md5 执行下面的命令，执行 md5 校验，但不显示任何输出，而是用返回码表示成功与否。 md5sum -c --status file.md5 echo $? "},"docs/文件命令/find.html":{"url":"docs/文件命令/find.html","title":"find","keywords":"","body":"find 执行下面的命令，全盘搜索系统中以指定后缀结尾的文件。 sudo find / -name *.conf 执行下面的命令，搜索指定目录下大于指定大小的文件。 sudo find /etc -size +1k 执行下面的命令，搜索指定目录下所有属于指定用户的文件。 sudo find /home -user kuriv 执行下面的命令，搜索当前目录下所有文件。 find . -type f 执行下面的命令，搜索当前目录下指定权限的所有文件，并逐一列出。 find . -perm 664 -exec ls -l {} \\; 执行下面的命令，搜索当前目录下以指定后缀结尾的文件，且不区分大小写。 find . -iname \"*.txt\" 执行下面的命令，搜索当前目录下不是以指定后缀结尾的文件。 find . ! -name \"*.txt\" "},"docs/文件命令/locate.html":{"url":"docs/文件命令/locate.html","title":"locate","keywords":"","body":"locate 执行下面的命令，查找系统中所有指定文件。 locate file.txt 执行下面的命令，查找系统中所有指定文件，且不区分大小写。 locate -i file.txt "},"docs/目录命令.html":{"url":"docs/目录命令.html","title":"目录命令","keywords":"","body":"目录命令 "},"docs/目录命令/cd.html":{"url":"docs/目录命令/cd.html","title":"cd","keywords":"","body":"cd 执行下面的命令，切换到指定目录。 cd dir 执行下面的命令，切换到上级目录。 cd .. 执行下面的命令，切换到上两级目录。 cd ../.. 执行下面的命令，切换到家目录。 cd ~ 执行下面的命令，切换到上一次所在的目录。 cd - "},"docs/目录命令/pwd.html":{"url":"docs/目录命令/pwd.html","title":"pwd","keywords":"","body":"pwd 执行下面的命令，显示当前路径。 pwd "},"docs/目录命令/ls.html":{"url":"docs/目录命令/ls.html","title":"ls","keywords":"","body":"ls 执行下面的命令，列出当前目录下所有文件，包括隐藏文件。 ls -a 执行下面的命令，列出当前目录下文件的详细信息。 ls -l 执行下面的命令，列出根目录下所有文件。 ls / 执行下面的命令，列出当前目录下所有文件和目录的详细信息，包括子目录内容。 ls -lR 执行下面的命令，列出当前目录下所有以 f 开头的文件的详细信息。 ls -l f* 执行下面的命令，列出当前目录下所有文件的详细信息，并根据修改时间降序排列。 ls -lt 执行下面的命令，列出当前目录下所有文件的详细信息，并根据修改时间升序排列。 ls -ltr 执行下面的命令，列出当前目录下所有文件及目录，并在目录名后加 / ，可执行文件名后加 * 。 ls -AF 执行下面的命令，列出当前目录下所有文件及目录的详细信息，并以可读方式显示文件大小。 ls -lh "},"docs/目录命令/tree.html":{"url":"docs/目录命令/tree.html","title":"tree","keywords":"","body":"tree 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录。 tree 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录，包括隐藏文件。 tree -a 执行下面的命令，以更直观方式仅显示当前目录下的所有目录。 tree -d 执行下面的命令，以更直观方式仅显示两层目录。 tree -L 2 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录，同时显示权限信息。 tree -p 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录，并根据修改时间降序排列。 tree -t 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录，并根据修改时间升序排列。 tree -r 执行下面的命令，以更直观方式显示当前目录下的所有文件和目录，并且列出完整的相对路径。 tree -f "},"docs/目录命令/mkdir.html":{"url":"docs/目录命令/mkdir.html","title":"mkdir","keywords":"","body":"mkdir 执行下面的命令，在当前目录下创建一个子目录。 mkdir dir 执行下面的命令，在当前目录下依次创建多个子目录。 mkdir dir1 dir2 dir3 执行下面的命令，递归创建子目录。 mkdir -p dir3/dir4/dir5 执行下面的命令，在创建子目录同时设置文件权限。 mkdir -m 700 dir6 执行下面的命令，显示子目录的创建过程。 mkdir -v dir{1..10} "},"docs/目录命令/rmdir.html":{"url":"docs/目录命令/rmdir.html","title":"rmdir","keywords":"","body":"rmdir 执行下面的命令，删除指定的空目录。 rmdir dir 执行下面的命令，递归删除多重目录。 rmdir -p dir1/dir2/dir3 执行下面的命令，显示目录的删除过程。 rmdir -v dir{1..3} "},"docs/目录命令/dirname.html":{"url":"docs/目录命令/dirname.html","title":"dirname","keywords":"","body":"dirname 执行下面的命令，提取指定文件的路径。 dirname /usr/bin/cat 执行下面的命令，提取指定目录的路径。 dirname /usr/bin/ "},"docs/文本命令.html":{"url":"docs/文本命令.html","title":"文本命令","keywords":"","body":"文本命令 "},"docs/文本命令/grep.html":{"url":"docs/文本命令/grep.html","title":"grep","keywords":"","body":"grep 执行下面的命令，搜索指定文件中包含某个关键词的内容。 grep kuriv /etc/passwd 执行下面的命令，搜索多个文件中包含某个关键词的内容。 sudo grep kuriv /etc/passwd /etc/shadow 执行下面的命令，搜索多个文件中包含某个关键词的内容，但不显示文件名。 sudo grep -h kuriv /etc/passwd /etc/shadow 执行下面的命令，搜索多个文件中包含某个关键词的内容，并统计出现次数。 sudo grep -c kuriv /etc/passwd /etc/shadow 执行下面的命令，搜索指定文件中包含某个关键词的内容，并忽略大小写。 grep -i KURIV /etc/passwd 执行下面的命令，搜索指定文件中包含某个关键词的内容，并显示行号。 grep -n kuriv /etc/passwd 执行下面的命令，反向查找指定文件，即指定文件中不包含某个关键词的内容。 grep -v kuriv /etc/passwd 执行下面的命令，搜索指定文件中精准匹配到某个关键词的内容。 grep -x Hello file.txt 执行下面的命令，只搜索包含某个关键词内容的文件名，但不列出具体的匹配行。 grep -l Hello * 执行下面的命令，递归搜索当前目录下所有文件中包含某个关键词的内容。 grep -rl Hello * 执行下面的命令，判断指定文件中是否包含某个关键词的内容，通过返回状态值输出结果。 grep -q kuriv /etc/passwd echo $? "},"docs/文本命令/egrep.html":{"url":"docs/文本命令/egrep.html","title":"egrep","keywords":"","body":"egrep 执行下面的命令，查找指定文件中包含一个或以上关键字的内容。 egrep 'He+' file.txt 执行下面的命令，查找指定文件中包含不同关键字的内容。 egrep 'Hello|World!' file.txt 执行下面的命令，查找指定文件中包含整体关键字的内容。 egrep '(Hello)' file.txt 执行下面的命令，查找指定文件中包含一个或以上整体关键字的内容。 egrep '(Hello)+' file.txt 执行下面的命令，查找指定文件中包含两次整体关键字的内容。 egrep '(Hello){2}' file.txt 执行下面的命令，查找指定文件中以关键字开头的内容。 egrep '^H' file.txt 执行下面的命令，查找指定文件中以关键字结尾的内容。 egrep '!$' file.txt 执行下面的命令，查找指定文件中包含可选关键字的内容。 egrep '[hH]ello' file.txt "},"docs/文本命令/cat.html":{"url":"docs/文本命令/cat.html","title":"cat","keywords":"","body":"cat 执行下面的命令，查看指定文件的内容。 cat file.txt 执行下面的命令，查看多个指定文件的内容。 cat file1.txt file2.txt 执行下面的命令，查看指定文件的内容，并显示行号。 cat -n file.txt 执行下面的命令，查看指定文件的内容，并去除重复的空行。 cat -s file.txt 执行下面的命令，查看指定文件的内容，并在每行结束添加终止符。 cat -E file.txt 执行下面的命令，查看指定文件的内容，并将原文件内容重定向到新文件中。 cat file.txt > newfile.txt 执行下面的命令，查看指定文件的内容，并将原文件内容追加到新文件中。 cat file.txt >> newfile.txt 执行下面的命令，查看多个指定文件的内容，同时合并为一个新的文件。 cat file1.txt file2.txt > newfile.txt 执行下面的命令，创建新的文本文件，完成后输入 CTRL + D 保存文件。 cat > file.txt "},"docs/文本命令/tac.html":{"url":"docs/文本命令/tac.html","title":"tac","keywords":"","body":"tac 执行下面的命令，反向显示指定文件的内容。 tac file.txt "},"docs/文本命令/more.html":{"url":"docs/文本命令/more.html","title":"more","keywords":"","body":"more 执行下面的命令，分页显示指定文件的内容。 more ~/.bashrc 执行下面的命令，先进行清屏操作，然后以每次 10 行的方式显示指定文件的内容。 more -c -10 ~/.bashrc 执行下面的命令，从第 10 行开始，分页显示指定文件的内容。 more +10 ~/.bashrc "},"docs/文本命令/less.html":{"url":"docs/文本命令/less.html","title":"less","keywords":"","body":"less 执行下面的命令，分页显示指定文件的内容。 less ~/.bashrc 执行下面的命令，分页显示多个文件的内容。 less ~/.bashrc ~/.bash_history 执行下面的命令，查看历史命令并分页显示。 history | less "},"docs/文本命令/head.html":{"url":"docs/文本命令/head.html","title":"head","keywords":"","body":"head 执行下面的命令，显示指定文件前 10 行的内容。 head ~/.bashrc 执行下面的命令，显示指定文件前指定行数的内容。 head -n 3 ~/.bashrc 执行下面的命令，显示指定文件除最后指定行数的内容。 head -n -10 ~/.bashrc 执行下面的命令，显示指定文件前 10 个字符的内容。 head -c 10 ~/.bashrc 执行下面的命令，显示指定文件除最后指定字符数的内容。 head -n -20 ~/.bashrc "},"docs/文本命令/tail.html":{"url":"docs/文本命令/tail.html","title":"tail","keywords":"","body":"tail 执行下面的命令，显示指定文件后 10 行的内容。 tail ~/.bashrc 执行下面的命令，显示指定文件后指定行数的内容。 tail -n 3 ~/.bashrc 执行下面的命令，显示指定文件从指定行到末尾的内容。 tail -n +10 ~/.bashrc 执行下面的命令，显示指定文件后 10 个字符的内容。 tail -c 10 ~/.bashrc 执行下面的命令，动态显示指定文件后指定行数的内容。 tail -f file.txt "},"docs/文本命令/nl.html":{"url":"docs/文本命令/nl.html","title":"nl","keywords":"","body":"nl 执行下面的命令，显示指定文件内容，并标注行号。 nl file.txt 执行下面的命令，显示指定文件内容，并添 0 标注行号。 nl -n rz file.txt 执行下面的命令，显示指定文件内容，并将设置行号宽度。 nl -n rz -w 3 file.txt "},"docs/文本命令/wc.html":{"url":"docs/文本命令/wc.html","title":"wc","keywords":"","body":"wc 执行下面的命令，统计指定文件的行数、字数以及字节数。 wc file.txt 执行下面的命令，统计指定文件的行数。 wc -l file.txt 执行下面的命令，统计指定文件的字数。 wc -w file.txt 执行下面的命令，统计指定文件的字节数。 wc -c file.txt 执行下面的命令，统计指定文件最长行的长度。 wc -L file.txt 执行下面的命令，使用管道统计指定文件的行数。 cat file.txt | wc -l "},"docs/文本命令/split.html":{"url":"docs/文本命令/split.html","title":"split","keywords":"","body":"split 执行下面的命令，将指定文件按照指定行数切割成小文件。 split -2 file.txt 执行下面的命令，将指定文件按照指定大小切割成小文件。 split -b 1k file.txt 执行下面的命令，将指定文件按照指定行数切割成小文件，并以数字作为切割后缀。 split -2 -d -a 3 file.txt 执行下面的命令，将指定文件按照指定行数切割成小文件，并指定切割前缀与后缀。 split -2 -d -a 3 file.txt split_file "},"docs/文本命令/cut.html":{"url":"docs/文本命令/cut.html","title":"cut","keywords":"","body":"cut 执行下面的命令，提取指定文件中指定列的内容。 cut -f 2 file.txt 执行下面的命令，提取指定文件中除指定列外的内容。 cut -f 2 --complement file.txt 执行下面的命令，按照指定分隔符，提取指定文件中指定列的内容。 cut -f 2 -d \";\" file.txt 执行下面的命令，提取指定文件中指定字节的内容。 cut -b 2-4,6 file.txt 执行下面的命令，提取指定文件中指定字符的内容。 cut -c 1-3 file.txt 执行下面的命令，提取指定文件指定字符前的内容。 cut -c -3 file.txt 执行下面的命令，提取指定文件指定字符后的内容。 cut -c 4- file.txt "},"docs/文本命令/paste.html":{"url":"docs/文本命令/paste.html","title":"paste","keywords":"","body":"paste 执行下面的命令，将两个文件按列拼接成一个新的文件。 paste file1.txt file2.txt 执行下面的命令，将多个文件按列拼接成一个新的文件。 paste file1.txt file2.txt file3.txt 执行下面的命令，将两个文件按列拼接成一个新的文件，并指定拼接符。 paste -d \";\" file1.txt file2.txt 执行下面的命令，将两个文件按行拼接成一个新的文件。 paste -s file1.txt file2.txt 执行下面的命令，每行显示指定数量个文件名。 ls | paste -d \";\" - - - - "},"docs/文本命令/sort.html":{"url":"docs/文本命令/sort.html","title":"sort","keywords":"","body":"sort 执行下面的命令，对文件内容进行字母排序。 sort file.txt 执行下面的命令，对文件内容进行逆向排序。 sort -r file.txt 执行下面的命令，对文件内容进行数字排序。 sort -n file.txt 执行下面的命令，按照指定分隔符，对文件内容指定列进行数字排序。 sort -t : -k 3 -n file.txt "},"docs/文本命令/uniq.html":{"url":"docs/文本命令/uniq.html","title":"uniq","keywords":"","body":"uniq 执行下面的命令，删除指定文件中连续的重复行。 uniq file.txt 执行下面的命令，删除指定文件中连续的重复行，并打印每行重复出现的次数。 uniq -c file.txt 执行下面的命令，只显示有重复的内容。 uniq -d file.txt 执行下面的命令，只显示没有重复的内容。 uniq -u file.txt "},"docs/文本命令/diff.html":{"url":"docs/文本命令/diff.html","title":"diff","keywords":"","body":"diff 执行下面的命令，比较两个文件内容。 diff file1.txt file2.txt 执行下面的命令，比较两个文件内容，通过并排格式输出。 diff -y -W 50 file1.txt file2.txt 执行下面的命令，比较两个文件内容，通过上下文格式输出。 diff -c file1.txt file2.txt 执行下面的命令，比较两个文件内容，通过统一格式输出。 diff -u file1.txt file2.txt 执行下面的命令，生成补丁文件。 diff file1.txt file2.txt > file.patch 执行下面的命令，打补丁。 patch file1.txt file.patch "},"docs/文本命令/join.html":{"url":"docs/文本命令/join.html","title":"join","keywords":"","body":"join "},"docs/系统命令.html":{"url":"docs/系统命令.html","title":"系统命令","keywords":"","body":"系统命令 "},"docs/系统命令/which.html":{"url":"docs/系统命令/which.html","title":"which","keywords":"","body":"which 执行下面的命令，查找命令文件所在位置。 which bash "},"docs/系统命令/whereis.html":{"url":"docs/系统命令/whereis.html","title":"whereis","keywords":"","body":"whereis 执行下面的命令，查找命令的程序路径和手册位置。 whereis ls 执行下面的命令，查找命令的程序路径。 whereis -b ls 执行下面的命令，查找命令的手册位置。 whereis -m ls "},"docs/系统命令/chown.html":{"url":"docs/系统命令/chown.html","title":"chown","keywords":"","body":"chown 执行下面的命令， "},"docs/系统命令/chgrp.html":{"url":"docs/系统命令/chgrp.html","title":"chgrp","keywords":"","body":"chgrp "},"docs/系统命令/chmod.html":{"url":"docs/系统命令/chmod.html","title":"chmod","keywords":"","body":"chmod "}}